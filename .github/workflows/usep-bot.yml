name: USEP Bot

on:
  schedule:
    - cron: "*/30 * * * *"  # every 30 minutes
  workflow_dispatch:  # allows manual run

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          playwright install chromium

      - name: Run USEP Bot
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          python - <<EOF
          import asyncio
          from playwright.async_api import async_playwright
          from telegram import Bot
          import os
          import re

          async def fetch_usep():
              try:
                  async with async_playwright() as p:
                      browser = await p.chromium.launch(headless=True)
                      page = await browser.new_page()
                      await page.goto("https://www.nems.emcsg.com/nems-prices", timeout=60000)
                      await page.wait_for_selector("text=Uniform Singapore Energy Price", timeout=60000)
                      text = await page.inner_text("body")
                      await browser.close()
                      match = re.search(r"Uniform Singapore Energy Price.*?([\\d,.]+)", text)
                      return match.group(1) if match else None
              except Exception as e:
                  print("Error fetching USEP:", e)
                  return None

          async def send_usep():
              bot = Bot(token=os.getenv("TELEGRAM_TOKEN"))
              usep = await fetch_usep()
              message = f"Current USEP: {usep} $/MWh" if usep else "Could not retrieve USEP value."
              try:
                  await bot.send_message(chat_id=os.getenv("CHAT_ID"), text=message)
              except Exception as e:
                  print("Error sending Telegram message:", e)

          if __name__ == "__main__":
              try:
                  asyncio.run(send_usep())
              except Exception as e:
                  print("Bot failed:", e)
          EOF